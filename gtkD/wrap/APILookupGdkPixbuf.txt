#
# This file is part of gtkD.
# 
# gtkD is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or (at your option) any later version, with
# some exceptions, please read the COPYING file.
# 
# gtkD is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public License
# along with gtkD; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110, USA
#


#
###
#####
# Definitions for wrapping GdkPixbuf
#####
###
#


addTypedefs: start

public import gtkc.glibtypes;
public import gtkc.gobjecttypes;
public import gtkc.gdktypes;
public import gtkc.atktypes;

version(Tango)
	private import tango.stdc.stdio;
else
	private import std.stdio;

addTypedefs: end

addAliases: start
addAliases: end

addEnums: start
addEnums: end

addStructs: start
addStructs: end

addTypes: start
addTypes: end

addFuncts: start
addFuncts: end

addUnions: start
addUnions: end

addConstants: start
addConstants: end


# must start with wrap

wrap: gdk-pixbuf

###########################################################
### GdkPixbuf #############################################
###########################################################

#file: gdk-pixbuf-Versioning.html
#struct: 
#class: 
#prefix: 
#outFile: 

##################
### moved to gdk and merged with gdk.Pixbuf
##################
#
#file: gdk-pixbuf-creating.html
#struct: GdkPixbuf
#class: Pixbuf
#prefix: gdk_pixbuf_
#noprefix: gdk_pixbuf_ref
#noprefix: gdk_pixbuf_unref
##import: g.Error*
##structWrap: GError** Error*
#import: gdk.Pixbuf
#structWrap: GdkPixbuf* Pixbuf
#import: gdkpixbuf.PixbufFormat
#structWrap: GdkPixbufFormat* PixbufFormat
#openFile: Pixbuf
#
#file: gdk-pixbuf-gdk-pixbuf.html
#mergeFile:  Pixbuf
#
#file: gdk-pixbuf-refcounting.html
#mergeFile:  Pixbuf
#
#file: gdk-pixbuf-file-loading.html
#mergeFile:  Pixbuf
#
#file: gdk-pixbuf-file-saving.html
#mergeFile:  Pixbuf
#
#file: gdk-pixbuf-scaling.html
#mergeFile:  Pixbuf
#
#file: gdk-pixbuf-util.html
#closeFile:  Pixbuf
############################

file: gdk-pixbuf-Inline-data.html
struct: GdkPixdata
class: Pixdata
prefix: gdk_pixdata_
import: gdk.Pixbuf
structWrap: GdkPixbuf* Pixbuf
import: glib.ErrorG
import: glib.GException
import: glib.StringG
structWrap: GString* StringG
import: glib.Str

array: gdk_pixdata_serialize Return stream_length_p
array: gdk_pixdata_deserialize stream stream_length

outFile: Pixdata

# on gdk
#file: gdk-pixbuf-gdk-pixbuf-rendering.html
#struct: 
#class: 
#prefix: 
#outFile: 

# on gdk
#file: gdk-pixbuf-gdk-pixbuf-from-drawables.html
#struct: 
#class: 
#prefix: 
#outFile: 

file: gdk-pixbuf-Animations.html
struct: GdkPixbufAnimation
class: PixbufAnimation
prefix: gdk_pixbuf_animation_
noprefix: gdk_pixbuf_animation_iter_
noprefix: gdk_pixbuf_simple_anim_
import: glib.ErrorG
import: glib.GException
structWrap: GdkPixbufAnimation* PixbufAnimation
import: gdkpixbuf.PixbufAnimationIter
structWrap: GdkPixbufAnimationIter* PixbufAnimationIter
import: gdk.Pixbuf
structWrap: GdkPixbuf* Pixbuf
import: glib.Str
nocode: gdk_pixbuf_animation_ref
nocode: gdk_pixbuf_animation_unref
inout: gdk_pixbuf_animation_get_iter start_time
outFile: PixbufAnimation

struct: GdkPixbufAnimationIter
class: PixbufAnimationIter
extend: GObject
prefix: gdk_pixbuf_animation_iter_
strictPrefix: Yes
import: gdk.Pixbuf
structWrap: GdkPixbuf* Pixbuf
inout: gdk_pixbuf_animation_iter_advance current_time
outFile: PixbufAnimationIter

struct: GdkPixbufSimpleAnim
class: PixbufSimpleAnimation
extend: GObject
prefix: gdk_pixbuf_simple_anim_
strictPrefix: Yes
import: gdk.Pixbuf
structWrap: GdkPixbuf* Pixbuf
outFile: PixbufSimpleAnimation

file: GdkPixbufLoader.html
struct: GdkPixbufLoader
class: PixbufLoader
prefix: gdk_pixbuf_loader_
import: gdkpixbuf.PixbufFormat
structWrap: GdkPixbufFormat* PixbufFormat
import: glib.ErrorG
import: glib.GException
import: gdk.Pixbuf
structWrap: GdkPixbuf* Pixbuf
import: gdkpixbuf.PixbufAnimation
structWrap: GdkPixbufAnimation* PixbufAnimation
array: gdk_pixbuf_loader_write buf count
import: glib.Str

nocode: gdk_pixbuf_loader_new_with_type
nocode: gdk_pixbuf_loader_new_with_mime_type
code: start
	/**
	 * Creates a new pixbuf loader object that always attempts to parse
	 * image data as if it were an image of type image_type or mime_type, instead of
	 * identifying the type automatically. Useful if you want an error if
	 * the image isn't the expected type, for loading image formats
	 * that can't be reliably identified by looking at the data, or if
	 * the user manually forces a specific type.
	 * Params:
	 *  type = name of the image format or mime to be loaded with the image
	 */
	public this (string type, bool isMimeType=false)
	{
		GdkPixbufLoader* p;
		GError* err = null;

		if ( isMimeType )
		{
			// GdkPixbufLoader* gdk_pixbuf_loader_new_with_mime_type  (const char *mime_type,  GError **error);
			p = cast(GdkPixbufLoader*)gdk_pixbuf_loader_new_with_mime_type(Str.toStringz(type), &err);
		}
		else
		{
			// GdkPixbufLoader* gdk_pixbuf_loader_new_with_type  (const char *image_type,  GError **error);
			p = cast(GdkPixbufLoader*)gdk_pixbuf_loader_new_with_type(Str.toStringz(type), &err);
		}

		if (err !is null)
		{
			throw new GException( new ErrorG(err) );
		}

		if(p is null)
		{
			throw new ConstructionException("null returned by gtk_button_new()");
		}

		this(p);
	}
code: end

outFile: PixbufLoader

#file: gdk-pixbuf-gdk-pixbuf-xlib-init.html
#class: XLib
#prefix: gdk_pixbuf_xlib_
#outFile: XLib

#file: gdk-pixbuf-gdk-pixbuf-xlib-rendering.html
##struct: GdkPixbuf
#class: XLibRender
#prefix: gdk_pixbuf_xlib_render_
#outFile: XLibRender

#file: gdk-pixbuf-gdk-pixbuf-xlib-from-drawables.html
##struct: GdkPixbuf
#class: XDrawables
#prefix: gdk_pixbuf_xlib_
#outFile: XDrawables

#file: gdk-pixbuf-gdk-pixbuf-xlib-rgb.html
##struct: 
#class: XLibRGB
#prefix: xlib_
#outFile: XLibRGB

file: gdk-pixbuf-Module-Interface.html
struct: GdkPixbufFormat
class: PixbufFormat
prefix: gdk_pixbuf_format_
structWrap: GdkPixbufFormat* PixbufFormat
import: gdk.Pixbuf
structWrap: GdkPixbuf* Pixbuf
import: glib.ListSG
structWrap: GSList* ListSG
import: glib.Str
outFile: PixbufFormat

