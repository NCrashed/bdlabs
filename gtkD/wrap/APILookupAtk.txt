#
# This file is part of gtkD.
# 
# gtkD is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or (at your option) any later version, with
# some exceptions, please read the COPYING file.
# 
# gtkD is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public License
# along with gtkD; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110, USA
#


#
###
#####
# Definitions for wrapping Atk
#####
###
#


addTypedefs: start

public import gtkc.glibtypes;
public import gtkc.gobjecttypes;
public alias void* AtkFocusHandler;
public struct AtkRectangle;

addTypedefs: end

addAliases: start
addAliases: end

addEnums: start
addEnums: end

addStructs: start
addStructs: end

addTypes: start
addTypes: end

addFuncts: start
addFuncts: end

addUnions: start
addUnions: end

addConstants: start
addConstants: end


# must start with wrap

wrap: atk

###########################################################
### Atk ###################################################
###########################################################

file: AtkAction.html
struct: AtkAction
class: Action
prefix: atk_action_
import: glib.Str
outFile: Action

file: AtkComponent.html
struct: AtkComponent
class: Component
prefix: atk_component_
structWrap: AtkObject* ObjectAtk
import: atk.ObjectAtk

out: atk_component_get_extents x
out: atk_component_get_extents y
out: atk_component_get_extents width
out: atk_component_get_extents height
out: atk_component_get_position x
out: atk_component_get_position y
out: atk_component_get_size width
out: atk_component_get_size height

outFile: Component

file: AtkDocument.html
struct: AtkDocument
class: Document
prefix: atk_document_
import: glib.Str
outFile: Document

file: AtkEditableText.html
struct: AtkEditableText
class: EditableText
prefix: atk_editable_text_
import: glib.Str
inout: atk_editable_text_insert_text position
outFile: EditableText

file: AtkGObjectAccessible.html
struct: AtkGObjectAccessible
class: GObjectAccessible
prefix: atk_gobject_accessible_
structWrap: AtkObject* ObjectAtk
structWrap: GObject* ObjectG
import: atk.ObjectAtk
import: gobject.ObjectG
outFile: GObjectAccessible

file: AtkHyperlink.html
struct: AtkHyperlink
class: Hyperlink
prefix: atk_hyperlink_
structWrap: AtkObject* ObjectAtk
import: atk.ObjectAtk
import: glib.Str
outFile: Hyperlink

#file: atk-AtkHyperlinkImpl.html
#struct: AtkHyperlinkImpl
#class: HyperlinkImpl
#prefix: atk_hyperlink_impl_
#outFile: HyperlinkImpl

file: AtkHypertext.html
struct: AtkHypertext
class: Hypertext
prefix: atk_hypertext_
structWrap: AtkHyperlink* Hyperlink
import: atk.Hyperlink
outFile: Hypertext

file: AtkImage.html
struct: AtkImage
class: Image
prefix: atk_image_
import: glib.Str

out: atk_image_get_image_position x
out: atk_image_get_image_position y
out: atk_image_get_image_size width
out: atk_image_get_image_size height

outFile: Image

file: AtkNoOpObject.html
struct: AtkNoOpObject
class: NoOpObject
prefix: atk_no_op_object_
structWrap: AtkObject* ObjectAtk
structWrap: GObject* ObjectG
import: atk.ObjectAtk
import: gobject.ObjectG
outFile: NoOpObject

file: AtkNoOpObjectFactory.html
struct: AtkNoOpObjectFactory
class: NoOpObjectFactory
prefix: atk_no_op_object_factory_
outFile: NoOpObjectFactory

file: AtkObject.html
struct: AtkObject
class: ObjectAtk
prefix: atk_object_
prefix: atk_
structWrap: AtkObject* ObjectAtk
structWrap: AtkRelationSet* RelationSet
structWrap: AtkStateSet* StateSet
import: atk.ObjectAtk
import: atk.RelationSet
import: atk.StateSet
import: glib.Str
outFile: ObjectAtk

file: AtkObjectFactory.html
struct: AtkObjectFactory
class: ObjectFactory
prefix: atk_object_factory_
structWrap: AtkObject* ObjectAtk
structWrap: GObject* ObjectG
import: atk.ObjectAtk
import: gobject.ObjectG
outFile: ObjectFactory

file: AtkRegistry.html
struct: AtkRegistry
class: Registry
prefix: atk_registry_
structWrap: AtkObjectFactory* ObjectFactory
structWrap: AtkRegistry* Registry
import: atk.ObjectFactory
import: atk.Registry
outFile: Registry

file: AtkRelation.html
struct: AtkRelation
class: Relation
prefix: atk_relation_
structWrap: AtkObject* ObjectAtk
structWrap: GPtrArray* PtrArray
import: atk.ObjectAtk
import: glib.PtrArray
import: glib.Str
array: atk_relation_new targets n_targets
outFile: Relation

file: AtkRelationSet.html
struct: AtkRelationSet
class: RelationSet
prefix: atk_relationSet_
structWrap: AtkObject* ObjectAtk
structWrap: AtkRelation* Relation
structWrap: GPtrArray* PtrArray
import: atk.ObjectAtk
import: atk.Relation
import: glib.PtrArray
outFile: RelationSet

file: AtkSelection.html
struct: AtkSelection
class: Selection
prefix: atk_selection_
structWrap: AtkObject* ObjectAtk
import: atk.ObjectAtk
outFile: Selection

file: atk-AtkState.html
class: State
prefix: atk_state_
import: glib.Str
outFile: State

file: AtkStateSet.html
struct: AtkStateSet
class: StateSet
prefix: atk_state_set_
structWrap: AtkStateSet* StateSet
import: glib.Str

array: atk_state_set_add_states types n_types
array: atk_state_set_contains_states types n_types

outFile: StateSet

file: AtkStreamableContent.html
struct: AtkStreamableContent
class: StreamableContent
prefix: atk_streamable_content_
structWrap: GIOChannel* IOChannel
import: glib.IOChannel
import: glib.Str
outFile: StreamableContent

file: AtkTable.html
struct: AtkTable
class: Table
prefix: atk_table_
structWrap: AtkObject* ObjectAtk
import: atk.ObjectAtk
import: glib.Str

out: atk_table_get_selected_columns selected
out: atk_table_get_selected_rows selected
array: atk_table_get_selected_columns selected Return
array: atk_table_get_selected_rows selected Return

outFile: Table

file: AtkText.html
struct: AtkText
class: Text
prefix: atk_text_
import: glib.Str

out: atk_text_get_text_after_offset start_offset
out: atk_text_get_text_after_offset end_offset
out: atk_text_get_text_at_offset start_offset
out: atk_text_get_text_at_offset end_offset
out: atk_text_get_text_before_offset start_offset
out: atk_text_get_text_before_offset end_offset
out: atk_text_get_character_extents x
out: atk_text_get_character_extents y
out: atk_text_get_character_extents width
out: atk_text_get_character_extents height
out: atk_text_get_run_attributes start_offset
out: atk_text_get_run_attributes end_offset
out: atk_text_get_selection start_offset
out: atk_text_get_selection end_offset

outFile:Text

file: AtkUtil.html
class: Util
prefix: atk_
structWrap: AtkObject* ObjectAtk
import: atk.ObjectAtk
import: glib.Str
outFile: Util

file: AtkValue.html
struct: AtkValue
class: ValueAtk
prefix: atk_value_
import: gobject.Value
structWrap: GValue* Value
outFile: ValueAtk
