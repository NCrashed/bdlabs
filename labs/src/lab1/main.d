import gtk.MainWindow;
import gtk.AboutDialog;
import gtk.Notebook;
import gtk.MenuBar;
import gtk.Menu;
import gtk.MenuItem;
import gtk.Label;
import gtk.Button;
import gtk.Main;
import gtk.Box;

import gtk.TreeView;
import gtk.TreeViewColumn;
import gtk.CellRendererText;
import gtk.ListStore;
import glib.RandG;
import CustomList;
import gtk.ScrolledWindow;

private import stdlib = core.stdc.stdlib : exit;

import orm.orm;
import data;

class ButtonUsage : MainWindow
{
	this()
	{
		super("Lab1");
		setDefaultSize(512, 512);
		
		MenuBar menuBar = new MenuBar();
		Menu fileMenu = menuBar.append("File");
		MenuItem generateItem = new MenuItem(&onGenerate, "Регенерация базы");
		MenuItem aboutItem = new MenuItem(&onAbout, "О программе");
		MenuItem exitItem = new MenuItem((item) {stdlib.exit(0);}, "Выход");

		fileMenu.append(generateItem);
		fileMenu.append(aboutItem);
		fileMenu.append(exitItem);

		Box box = new Box(GtkOrientation.VERTICAL, 5);
		box.packStart(menuBar, 0, 0, 0);
		//box.add(menuBar);

		Box viewBox = new Box(GtkOrientation.VERTICAL, 5);
		ScrolledWindow scrollwin = new ScrolledWindow();
		viewBox.packStart(scrollwin, 1, 1, 0);
		//viewBox.add(scrollwin);

		TreeView view = createViewAndModel();
		scrollwin.add(view);

		Notebook tabs = new Notebook();
		tabs.appendPage(viewBox, "Просмотр книг");
		box.packStart(tabs, 1, 1, 0);

		add(box);
		showAll();	
	}
	void onGenerate(MenuItem item)
	{
		generateBase(db, 100, 20, 100);
	}
	void onAbout(MenuItem item)
	{
		with (new AboutDialog())
		{
			string[] names;
			names ~= "Гуща Антон (NCrashed)";
			setAuthors(names);
			setComments("Первая лабораторная работа по курсу 'Банки данных'");
			setLicense(license);
			setCopyright("©Гуща А.В. 2013");
			//setWebsite("http://ddev.ratedo.com");
			showAll();
		}
	}

	TreeView createViewAndModel()
	{
		TreeViewColumn   col;
		CellRendererText renderer;
		CustomList       customlist;
		TreeView         view;

		customlist = new CustomList();
		fillModel(customlist);
		
		view = new TreeView(customlist);
		
		col = new TreeViewColumn();
		renderer  = new CellRendererText();
		col.packStart(renderer, true);
		col.addAttribute(renderer, "text", CustomListColumn.Name);
		col.setTitle("Название");
		view.appendColumn(col);

		col = new TreeViewColumn();
		renderer  = new CellRendererText();
		col.packStart(renderer, true);
		col.addAttribute(renderer, "text", CustomListColumn.Subject);
		col.setTitle("Тема");
		view.appendColumn(col);

		return view;
	}

	void fillModel(CustomList customlist)
	{
		try
		{
			Book[] books = getAllBooks(db);

			foreach (book; books)
			{
				customlist.appendRecord(book.title, getSubject(db, book.subjectid).subject);
			}
		} catch(Exception e)
		{
			import std.stdio;
			writeln(e.msg);
		}
	}	
}

DataBase!"testbd" db;

void main(string[] args)
{
	Main.init(args);
	db = new DataBase!"testbd"("host=localhost port=5432 dbname=postgres user=postgres password=150561");

	new ButtonUsage();
	
	Main.run();
}

string license = q{
Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
};